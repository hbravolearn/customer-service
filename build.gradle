plugins {
	id "java"
	id "jacoco"
	id "org.sonarqube" version "5.1.0.4882"
	id "org.springframework.boot" version "3.3.4"
	id "io.spring.dependency-management" version "1.1.6"
}

group = "com.company.ecommerce"
version = "0.0.1-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set("springCloudVersion", "2023.0.3")
	set("mapStructVersion", "1.5.5.Final")
	set("openApiVersion", "2.6.0")
	set("oktaVersion", "3.0.7")
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		html.required = true
	}

	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, include: [
							"com/company/ecommerce/customer/repository/**",
							"com/company/ecommerce/customer/service/impl/**",
							"com/company/ecommerce/customer/controller/impl/**"
					])
				})
		)
	}
}

sonar {
	properties {
		property "sonar.projectKey", "hbravolearn_customer-service"
		property "sonar.organization", "company-com"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation "org.springframework.cloud:spring-cloud-starter-config"
	implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"
	implementation "org.mapstruct:mapstruct:${mapStructVersion}"
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "org.springframework.boot:spring-boot-testcontainers"
	testImplementation "org.testcontainers:junit-jupiter"
	testImplementation "org.testcontainers:mongodb"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named("test") {
	jvmArgs("-Xshare:off", "-XX:+EnableDynamicAgentLoading")
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
